{"version":3,"sources":["components/Character-Details.js","components/Character.js","App.js","index.js"],"names":["ButtonStyled","styled","button","Characterdetails","props","info","useState","toggleB","setToggleB","onClick","id","species","gender","status","Character","char","className","key","src","image","alt","name","App","setChar","useEffect","axios","get","then","res","console","log","data","results","catch","err","map","c","ReactDOM","render","document","getElementById"],"mappings":"k2BAIA,IAAMA,E,MAAeC,EAAOC,OAAV,KA6CDC,MAxBjB,SAA0BC,GAAO,IACrBC,EAASD,EAATC,KADoB,EAECC,oBAAS,GAFV,mBAErBC,EAFqB,KAEZC,EAFY,KAQ5B,OACE,6BACE,kBAACR,EAAD,CAAcS,QANH,WACbD,GAAYD,KAKV,IAAiCA,EAAU,eAAiB,gBAEtDA,GAAW,wBAAIG,GAAG,WAEd,2BAAG,uCAAH,IAAoBL,EAAKM,SACzB,2BAAG,sCAAH,IAAmBN,EAAKO,QACxB,2BAAG,sCAAH,IAAmBP,EAAKQ,WCpC3B,SAASC,EAAUV,GAAO,IAC9BW,EAAQX,EAARW,KAGP,OACI,yBAAKC,UAAU,uBAAuBC,IAAKF,EAAKL,IAC5C,yBAAKM,UAAU,iBACX,yBAAKE,IAAKH,EAAKI,MAAOC,IAAI,iBAE9B,yBAAKJ,UAAU,kBACX,4BAAKD,EAAKM,MACV,yBAAKL,UAAU,aACX,kBAAC,EAAD,CAAkBX,KAAMU,GAAxB,QCXpB,IAqCeO,EArCH,WAAM,MAIQhB,mBAAS,IAJjB,mBAITS,EAJS,KAIHQ,EAJG,KAwBhB,OAZAC,qBAAU,WACRC,IAAMC,IAAI,6CACTC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,KAAKC,SACrBT,EAAQK,EAAIG,KAAKC,YAElBC,OAAM,SAAAC,SAGN,IAID,yBAAKlB,UAAU,OACb,wBAAIA,UAAU,UAAd,2BAEED,EAAKoB,KAAK,SAAAC,GACV,OAAQ,kBAACtB,EAAD,CAAWG,IAAKmB,EAAE1B,GAAIK,KAAMqB,SC9B5CC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.43493f55.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst ButtonStyled = styled.button`\r\n    background-color: rgb(79, 96, 98);\r\n    font-size: 20px;\r\n    border: solid 2px rgb(44, 44, 44);\r\n    border-radius: 25px;\r\n    font-size: 1.3rem;\r\n    padding: 2% 5%;\r\n    cursor: pointer;\r\n    border-radius: 8px;\r\n    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.18);\r\n    transition: all 0.3s ease-in-out;\r\n    color: whitesmoke;\r\n    &:hover {\r\n    transition: all 0.3s ease-in-out;\r\n    background-color: rgb(113, 126, 128);\r\n    transform: scale(1.05);\r\n  }\r\n\r\n`\r\n\r\n\r\nfunction Characterdetails(props){\r\n    const { info } = props\r\n    const [toggleB, setToggleB]= useState(false)\r\n\r\n    const Toggle = () => {\r\n      setToggleB(!toggleB)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ButtonStyled onClick={Toggle}> {toggleB ? \"Hide Details\" : \"Show Details\"}</ButtonStyled>\r\n          {\r\n              toggleB && <ul id='details'>\r\n                  \r\n                  <p><b>SPECIES:</b> {info.species}</p>\r\n                  <p><b>GENDER:</b> {info.gender}</p>\r\n                  <p><b>STATUS:</b> {info.status}</p>\r\n              </ul>\r\n          }   \r\n      \r\n     </div>\r\n      )\r\n    }\r\n\r\n  export default Characterdetails","import React from 'react'\r\nimport  Characterdetails  from './Character-Details.js'\r\n// Write your Character component here\r\n\r\n\r\nexport default function Character(props){\r\n    const {char} = props\r\n\r\n\r\n    return (\r\n        <div className='characters-container' key={char.id}>\r\n            <div className='img-container'>\r\n                <img src={char.image} alt='profile-pic'></img>\r\n            </div>\r\n            <div className='info-container'>\r\n                <h3>{char.name}</h3>\r\n                <div className='main-info'>\r\n                    <Characterdetails info={char} > </Characterdetails>\r\n                </div>    \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios'\r\nimport Character from './components/Character.js'\r\n\r\n\r\nconst App = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\n\r\n  const [char, setChar] = useState([])\r\n  \r\n\r\n\r\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n\r\n  useEffect(() => {\r\n    axios.get('https://rickandmortyapi.com/api/character')\r\n    .then(res => {\r\n      console.log(res.data.results)\r\n      setChar(res.data.results)\r\n    })\r\n    .catch(err => {\r\n      debugger\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"Header\">Rick & Morty Characters</h1>\r\n      {\r\n        char.map( c => {\r\n        return  <Character key={c.id} char={c} ></Character>\r\n        })\r\n      \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}